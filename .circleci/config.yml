# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2

jobs:
  dep:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/hypnoglow/chronologist
    steps:
      - checkout
      - run:
          command: |
            curl -sSL https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64 -o /go/bin/dep
            chmod +x /go/bin/dep
      - run: dep ensure -v -vendor-only
      - persist_to_workspace:
          root: /go/src/github.com/hypnoglow
          paths:
            - chronologist
  test-unit:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/hypnoglow/chronologist
    steps:
      - attach_workspace:
          at: /go/src/github.com/hypnoglow
      - run: go test -v $(go list ./... | grep -v e2e)
  test-build:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/hypnoglow/chronologist
    steps:
      - attach_workspace:
          at: /go/src/github.com/hypnoglow
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker image build -t hypnoglow/chronologist:dirty .
  publish-image-master:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/hypnoglow/chronologist
    steps:
      - attach_workspace:
          at: /go/src/github.com/hypnoglow
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker image build -t hypnoglow/chronologist:master --build-arg VCS_REF=$CIRCLE_SHA1 .
            docker image push hypnoglow/chronologist:master
  publish-image-tag:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/hypnoglow/chronologist
    steps:
      - attach_workspace:
          at: /go/src/github.com/hypnoglow
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: |
            [ -z "${CIRCLE_TAG}" ] && exit 1
            tag=${CIRCLE_TAG#v*}
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker image build -t hypnoglow/chronologist:${tag} --build-arg VCS_REF=$CIRCLE_SHA1 .
            docker image push hypnoglow/chronologist:${tag}
  publish-chart-tag:
    docker:
      - image: alpine:3.7
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "0d:f4:ec:bd:16:e8:33:e6:87:64:4d:c2:14:24:2b:73"
      - run:
          name: Setup
          command: |
            apk add -q --no-cache git curl openssh
            curl -sSL https://storage.googleapis.com/kubernetes-helm/helm-v2.8.2-linux-amd64.tar.gz | tar xz
            mv linux-amd64/helm /usr/local/bin/helm
            rm -rf linux-amd64
            helm init --client-only
            git config --global user.name "CircleCI"
            git config --global user.email "hypnoglow+chronologist@gmail.com"
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Release Helm chart
          command: |
            [ -z "${CIRCLE_TAG}" ] && exit 1
            version=${CIRCLE_TAG#v*}
            git checkout gh-pages
            git rebase --onto master $(git merge-base master gh-pages) gh-pages
            helm package ./deployment/chart/chronologist --version ${version} --app-version ${version} -d ./charts
            helm repo index .
            git add .
            git commit --amend --no-edit
            git push origin gh-pages --force-with-lease
workflows:
  version: 2
  common-pipeline:
    jobs:
      - dep
      - test-unit:
          requires:
            - dep
      - test-build:
          requires:
            - dep
          filters:
            branches:
              ignore: master
      - publish-image-master:
          requires:
            - test-build
            - test-unit
          filters:
            branches:
              only: master
  release-pipeline:
    jobs:
      - dep:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - publish-image-tag:
          requires:
            - dep
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - publish-chart-tag:
          requires:
            - publish-image-tag
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
